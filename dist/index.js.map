{"version":3,"file":"index.js","sources":["../src/hooks/useLayoutEffect.tsx","../src/utils.ts","../src/hooks/useSnapPoints.tsx","../src/machines/overlay.ts","../src/BottomSheet.tsx","../src/hooks/useReady.tsx","../src/hooks/useReducedMotion.tsx","../src/hooks/useSpring.tsx","../src/hooks/useScrollLock.tsx","../src/hooks/useAriaHider.tsx","../src/hooks/useFocusTrap.tsx","../src/hooks/useSpringInterpolations.tsx","../src/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect as useLayoutEffectSafely } from 'react'\r\n\r\n// Ensure the name used in components is useLayoutEffect so the eslint react hooks plugin works\r\nexport const useLayoutEffect =\r\n  typeof window !== 'undefined' ? useLayoutEffectSafely : useEffect\r\n","/* eslint-disable no-self-compare */\r\n\r\n// stolen from lodash\r\nexport function clamp(number: number, lower: number, upper: number) {\r\n  number = +number\r\n  lower = +lower\r\n  upper = +upper\r\n  lower = lower === lower ? lower : 0\r\n  upper = upper === upper ? upper : 0\r\n  if (number === number) {\r\n    number = number <= upper ? number : upper\r\n    number = number >= lower ? number : lower\r\n  }\r\n  return number\r\n}\r\n\r\n// Mwahaha easiest way to filter out NaN I ever saw! >:3\r\nexport function deleteNaN(arr) {\r\n  const set = new Set(arr)\r\n  set.delete(NaN)\r\n  return [...set]\r\n}\r\n\r\nexport function roundAndCheckForNaN(unrounded) {\r\n  const rounded = Math.round(unrounded)\r\n  if (Number.isNaN(unrounded)) {\r\n    throw new TypeError(\r\n      'Found a NaN! Check your snapPoints / defaultSnap / snapTo '\r\n    )\r\n  }\r\n\r\n  return rounded\r\n}\r\n\r\n// Validate, sanitize, round and dedupe snap points, as well as extracting the minSnap and maxSnap points\r\nexport function processSnapPoints(unsafeSnaps: number | number[], maxHeight) {\r\n  const safeSnaps = [].concat(unsafeSnaps).map(roundAndCheckForNaN)\r\n\r\n  const snapPointsDedupedSet = safeSnaps.reduce((acc, snapPoint) => {\r\n    acc.add(clamp(snapPoint, 0, maxHeight))\r\n    return acc\r\n  }, new Set<number>())\r\n\r\n  const snapPoints = Array.from(snapPointsDedupedSet)\r\n\r\n  const minSnap = Math.min(...snapPoints)\r\n  if (Number.isNaN(minSnap)) {\r\n    throw new TypeError('minSnap is NaN')\r\n  }\r\n  const maxSnap = Math.max(...snapPoints)\r\n  if (Number.isNaN(maxSnap)) {\r\n    throw new TypeError('maxSnap is NaN')\r\n  }\r\n\r\n  return {\r\n    snapPoints,\r\n    minSnap,\r\n    maxSnap,\r\n  }\r\n}\r\n\r\nexport const debugging =\r\n  process.env.NODE_ENV === 'development' && typeof window !== 'undefined'\r\n    ? window.location.search === '?debug'\r\n    : false\r\n","import React, {\r\n  useCallback,\r\n  useDebugValue,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { ResizeObserver, ResizeObserverEntry } from '@juggle/resize-observer'\r\nimport type { defaultSnapProps, ResizeSource, snapPoints } from '../types'\r\nimport { processSnapPoints, roundAndCheckForNaN } from '../utils'\r\nimport { useReady } from './useReady'\r\nimport { ResizeObserverOptions } from '@juggle/resize-observer/lib/ResizeObserverOptions'\r\nimport { useLayoutEffect } from './useLayoutEffect'\r\n\r\nexport function useSnapPoints({\r\n  contentRef,\r\n  controlledMaxHeight,\r\n  footerEnabled,\r\n  footerRef,\r\n  getSnapPoints,\r\n  headerEnabled,\r\n  headerRef,\r\n  heightRef,\r\n  lastSnapRef,\r\n  ready,\r\n  registerReady,\r\n  resizeSourceRef,\r\n}: {\r\n  contentRef: React.RefObject<Element>\r\n  controlledMaxHeight?: number\r\n  footerEnabled: boolean\r\n  footerRef: React.RefObject<Element>\r\n  getSnapPoints: snapPoints\r\n  headerEnabled: boolean\r\n  headerRef: React.RefObject<Element>\r\n  heightRef: React.RefObject<number>\r\n  lastSnapRef: React.RefObject<number>\r\n  ready: boolean\r\n  registerReady: ReturnType<typeof useReady>['registerReady']\r\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n}) {\r\n  const { maxHeight, minHeight, headerHeight, footerHeight } = useDimensions({\r\n    contentRef: contentRef,\r\n    controlledMaxHeight,\r\n    footerEnabled,\r\n    footerRef,\r\n    headerEnabled,\r\n    headerRef,\r\n    registerReady,\r\n    resizeSourceRef,\r\n  })\r\n\r\n  const { snapPoints, minSnap, maxSnap } = processSnapPoints(\r\n    ready\r\n      ? getSnapPoints({\r\n          height: heightRef.current,\r\n          footerHeight,\r\n          headerHeight,\r\n          minHeight,\r\n          maxHeight,\r\n        })\r\n      : [0],\r\n    maxHeight\r\n  )\r\n  //__CONSOLE__REPLACEMENT__?.log({ snapPoints, minSnap, maxSnap })\r\n\r\n  // @TODO investigate the gains from memoizing this\r\n  function findSnap(\r\n    numberOrCallback: number | ((state: defaultSnapProps) => number)\r\n  ) {\r\n    let unsafeSearch: number\r\n    if (typeof numberOrCallback === 'function') {\r\n      unsafeSearch = numberOrCallback({\r\n        footerHeight,\r\n        headerHeight,\r\n        height: heightRef.current,\r\n        minHeight,\r\n        maxHeight,\r\n        snapPoints,\r\n        lastSnap: lastSnapRef.current,\r\n      })\r\n    } else {\r\n      unsafeSearch = numberOrCallback\r\n    }\r\n    const querySnap = roundAndCheckForNaN(unsafeSearch)\r\n    return snapPoints.reduce(\r\n      (prev, curr) =>\r\n        Math.abs(curr - querySnap) < Math.abs(prev - querySnap) ? curr : prev,\r\n      minSnap\r\n    )\r\n  }\r\n\r\n  useDebugValue(`minSnap: ${minSnap}, maxSnap:${maxSnap}`)\r\n\r\n  return { minSnap, maxSnap, findSnap, maxHeight }\r\n}\r\n\r\nfunction useDimensions({\r\n  contentRef,\r\n  controlledMaxHeight,\r\n  footerEnabled,\r\n  footerRef,\r\n  headerEnabled,\r\n  headerRef,\r\n  registerReady,\r\n  resizeSourceRef,\r\n}: {\r\n  contentRef: React.RefObject<Element>\r\n  controlledMaxHeight?: number\r\n  footerEnabled: boolean\r\n  footerRef: React.RefObject<Element>\r\n  headerEnabled: boolean\r\n  headerRef: React.RefObject<Element>\r\n  registerReady: ReturnType<typeof useReady>['registerReady']\r\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n}) {\r\n  const setReady = useMemo(() => registerReady('contentHeight'), [\r\n    registerReady,\r\n  ])\r\n  const maxHeight = useMaxHeight(\r\n    controlledMaxHeight,\r\n    registerReady,\r\n    resizeSourceRef\r\n  )\r\n\r\n  // @TODO probably better to forward props instead of checking refs to decide if it's enabled\r\n  const headerHeight = useElementSizeObserver(headerRef, {\r\n    label: 'headerHeight',\r\n    enabled: headerEnabled,\r\n    resizeSourceRef,\r\n  })\r\n  const contentHeight = useElementSizeObserver(contentRef, {\r\n    label: 'contentHeight',\r\n    enabled: true,\r\n    resizeSourceRef,\r\n  })\r\n  const footerHeight = useElementSizeObserver(footerRef, {\r\n    label: 'footerHeight',\r\n    enabled: footerEnabled,\r\n    resizeSourceRef,\r\n  })\r\n  const minHeight =\r\n    Math.min(maxHeight - headerHeight - footerHeight, contentHeight) +\r\n    headerHeight +\r\n    footerHeight\r\n\r\n  useDebugValue(`minHeight: ${minHeight}`)\r\n\r\n  const ready = contentHeight > 0\r\n  useEffect(() => {\r\n    if (ready) {\r\n      setReady()\r\n    }\r\n  }, [ready, setReady])\r\n\r\n  return {\r\n    maxHeight,\r\n    minHeight,\r\n    headerHeight,\r\n    footerHeight,\r\n  }\r\n}\r\n\r\nconst observerOptions: ResizeObserverOptions = {\r\n  // Respond to changes to padding, happens often on iOS when using env(safe-area-inset-bottom)\r\n  // And the user hides or shows the Safari browser toolbar\r\n  box: 'border-box',\r\n}\r\n/**\r\n * Hook for determining the size of an element using the Resize Observer API.\r\n *\r\n * @param ref - A React ref to an element\r\n */\r\nfunction useElementSizeObserver(\r\n  ref: React.RefObject<Element>,\r\n  {\r\n    label,\r\n    enabled,\r\n    resizeSourceRef,\r\n  }: {\r\n    label: string\r\n    enabled: boolean\r\n    resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n  }\r\n): number {\r\n  let [size, setSize] = useState(0)\r\n\r\n  useDebugValue(`${label}: ${size}`);\r\n  __CONSOLE__REPLACEMENT__?.log(`useElementSizeObserver: ${label}: ${size}`)\r\n\r\n  const handleResize = useCallback(\r\n    (entries: ResizeObserverEntry[]) => {\r\n      // we only observe one element, so accessing the first entry here is fine\r\n      setSize(entries[0].borderBoxSize[0].blockSize)\r\n      resizeSourceRef.current = 'element'\r\n    },\r\n    [resizeSourceRef]\r\n  )\r\n\r\n  useLayoutEffect(() => {\r\n    if (!ref.current || !enabled) {\r\n      return\r\n    }\r\n\r\n    const resizeObserver = new ResizeObserver(handleResize)\r\n    resizeObserver.observe(ref.current, observerOptions)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n    }\r\n  }, [ref, handleResize, enabled])\r\n\r\n  return enabled ? size : 0\r\n}\r\n\r\n// Blazingly keep track of the current viewport height without blocking the thread, keeping that sweet 60fps on smartphones\r\nfunction useMaxHeight(\r\n  controlledMaxHeight,\r\n  registerReady: ReturnType<typeof useReady>['registerReady'],\r\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\r\n) {\r\n  const setReady = useMemo(() => registerReady('maxHeight'), [registerReady])\r\n  const [maxHeight, setMaxHeight] = useState(() =>\r\n    roundAndCheckForNaN(controlledMaxHeight) || typeof window !== 'undefined'\r\n      ? window.innerHeight\r\n      : 0\r\n  )\r\n  const ready = maxHeight > 0\r\n  const raf = useRef(0)\r\n\r\n  useDebugValue(controlledMaxHeight ? 'controlled' : 'auto')\r\n\r\n  useEffect(() => {\r\n    if (ready) {\r\n      setReady()\r\n    }\r\n  }, [ready, setReady])\r\n\r\n  useLayoutEffect(() => {\r\n    // Bail if the max height is a controlled prop\r\n    if (controlledMaxHeight) {\r\n      setMaxHeight(roundAndCheckForNaN(controlledMaxHeight))\r\n      resizeSourceRef.current = 'maxheightprop'\r\n\r\n      return\r\n    }\r\n\r\n    const handleResize = () => {\r\n      if (raf.current) {\r\n        // bail to throttle the amount of resize changes\r\n        return\r\n      }\r\n\r\n      // throttle state changes using rAF\r\n      raf.current = requestAnimationFrame(() => {\r\n        setMaxHeight(window.innerHeight)\r\n        resizeSourceRef.current = 'window'\r\n\r\n        raf.current = 0\r\n      })\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    setMaxHeight(window.innerHeight)\r\n    resizeSourceRef.current = 'window'\r\n    setReady()\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n      cancelAnimationFrame(raf.current)\r\n    }\r\n  }, [controlledMaxHeight, setReady, resizeSourceRef])\r\n\r\n  return maxHeight\r\n}\r\n","import { Machine, assign } from 'xstate'\r\n\r\n// This is the root machine, composing all the other machines and is the brain of the bottom sheet\r\n\r\ninterface OverlayStateSchema {\r\n  states: {\r\n    // the overlay usually starts in the closed position\r\n    closed: {}\r\n    opening: {\r\n      states: {\r\n        // Used to fire off the springStart event\r\n        start: {}\r\n        // Decide how to transition to the open state based on what the initialState is\r\n        transition: {}\r\n        // Fast enter animation, sheet is open by default\r\n        immediately: {\r\n          states: {\r\n            open: {}\r\n            activating: {}\r\n          }\r\n        }\r\n        smoothly: {\r\n          states: {\r\n            // This state only happens when the overlay should start in an open state, instead of animating from the bottom\r\n            // openImmediately: {}\r\n            // visuallyHidden will render the overlay in the open state, but with opacity 0\r\n            // doing this solves two problems:\r\n            // on Android focusing an input element will trigger the softkeyboard to show up, which will change the viewport height\r\n            // on iOS the focus event will break the view by triggering a scrollIntoView event if focus happens while the overlay is below the viewport and body got overflow:hidden\r\n            // by rendering things with opacity 0 we ensure keyboards and scrollIntoView all happen in a way that match up with what the sheet will look like.\r\n            // we can then move it to the opening position below the viewport, and animate it into view without worrying about height changes or scrolling overflow:hidden events\r\n            visuallyHidden: {}\r\n            // In this state we're activating focus traps, scroll locks and more, this will sometimes trigger soft keyboards and scrollIntoView\r\n            // @TODO we might want to add a delay here before proceeding to open, to give android and iOS enough time to adjust the viewport when focusing an interactive element\r\n            activating: {}\r\n            // Animates from the bottom\r\n            open: {}\r\n          }\r\n        }\r\n        // Used to fire off the springEnd event\r\n        end: {}\r\n        // And finally we're ready to transition to open\r\n        done: {}\r\n      }\r\n    }\r\n    open: {}\r\n    // dragging responds to user gestures, which may interrupt the opening state, closing state or snapping\r\n    // when interrupting an opening event, it fires onSpringEnd(OPEN) before onSpringStart(DRAG)\r\n    // when interrupting a closing event, it fires onSpringCancel(CLOSE) before onSpringStart(DRAG)\r\n    // when interrupting a dragging event, it fires onSpringCancel(SNAP) before onSpringStart(DRAG)\r\n    dragging: {}\r\n    // snapping happens whenever transitioning to a new snap point, often after dragging\r\n    snapping: {\r\n      states: {\r\n        start: {}\r\n        snappingSmoothly: {}\r\n        end: {}\r\n        done: {}\r\n      }\r\n    }\r\n    resizing: {\r\n      states: {\r\n        start: {}\r\n        resizingSmoothly: {}\r\n        end: {}\r\n        done: {}\r\n      }\r\n    }\r\n    closing: {\r\n      states: {\r\n        start: {}\r\n        deactivating: {}\r\n        closingSmoothly: {}\r\n        end: {}\r\n        done: {}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype OverlayEvent =\r\n  | { type: 'OPEN' }\r\n  | {\r\n      type: 'SNAP'\r\n      payload: {\r\n        y: number\r\n        velocity: number\r\n        source: 'dragging' | 'custom' | string\r\n      }\r\n    }\r\n  | { type: 'CLOSE' }\r\n  | { type: 'DRAG' }\r\n  | { type: 'RESIZE' }\r\n\r\n// The context (extended state) of the machine\r\ninterface OverlayContext {\r\n  initialState: 'OPEN' | 'CLOSED'\r\n  snapSource?: 'string'\r\n}\r\nfunction sleep(ms = 1000) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nconst cancelOpen = {\r\n  CLOSE: { target: '#overlay.closing', actions: 'onOpenCancel' },\r\n}\r\nconst openToDrag = {\r\n  DRAG: { target: '#overlay.dragging', actions: 'onOpenEnd' },\r\n}\r\nconst openToResize = {\r\n  RESIZE: { target: '#overlay.resizing', actions: 'onOpenEnd' },\r\n}\r\n\r\nconst initiallyOpen = ({ initialState }) => initialState === 'OPEN'\r\nconst initiallyClosed = ({ initialState }) => initialState === 'CLOSED'\r\n\r\n// Copy paste the machine into https://xstate.js.org/viz/ to make sense of what's going on in here ;)\r\n\r\nexport const overlayMachine = Machine<\r\n  OverlayContext,\r\n  OverlayStateSchema,\r\n  OverlayEvent\r\n>(\r\n  {\r\n    id: 'overlay',\r\n    initial: 'closed',\r\n    context: { initialState: 'CLOSED' },\r\n    states: {\r\n      closed: { on: { OPEN: 'opening', CLOSE: undefined } },\r\n      opening: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onOpenStart',\r\n              onDone: 'transition',\r\n            },\r\n          },\r\n          transition: {\r\n            always: [\r\n              { target: 'immediately', cond: 'initiallyOpen' },\r\n              { target: 'smoothly', cond: 'initiallyClosed' },\r\n            ],\r\n          },\r\n          immediately: {\r\n            initial: 'open',\r\n            states: {\r\n              open: {\r\n                invoke: { src: 'openImmediately', onDone: 'activating' },\r\n              },\r\n              activating: {\r\n                invoke: { src: 'activate', onDone: '#overlay.opening.end' },\r\n                on: { ...openToDrag, ...openToResize },\r\n              },\r\n            },\r\n          },\r\n          smoothly: {\r\n            initial: 'visuallyHidden',\r\n            states: {\r\n              visuallyHidden: {\r\n                invoke: { src: 'renderVisuallyHidden', onDone: 'activating' },\r\n              },\r\n              activating: {\r\n                invoke: { src: 'activate', onDone: 'open' },\r\n              },\r\n              open: {\r\n                invoke: { src: 'openSmoothly', onDone: '#overlay.opening.end' },\r\n                on: { ...openToDrag, ...openToResize },\r\n              },\r\n            },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onOpenEnd', onDone: 'done' },\r\n            on: { CLOSE: '#overlay.closing', DRAG: '#overlay.dragging' },\r\n          },\r\n          done: {\r\n            type: 'final',\r\n          },\r\n        },\r\n        on: { ...cancelOpen },\r\n        onDone: 'open',\r\n      },\r\n      open: {\r\n        on: { DRAG: '#overlay.dragging', SNAP: 'snapping', RESIZE: 'resizing' },\r\n      },\r\n      dragging: {\r\n        on: { SNAP: 'snapping' },\r\n      },\r\n      snapping: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onSnapStart',\r\n              onDone: 'snappingSmoothly',\r\n            },\r\n            entry: [\r\n              assign({\r\n                // @ts-expect-error\r\n                y: (_, { payload: { y } }) => y,\r\n                // @ts-expect-error\r\n                velocity: (_, { payload: { velocity } }) => velocity,\r\n                // @ts-expect-error\r\n                snapSource: (_, { payload: { source = 'custom' } }) => source,\r\n              }),\r\n            ],\r\n          },\r\n          snappingSmoothly: {\r\n            invoke: { src: 'snapSmoothly', onDone: 'end' },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onSnapEnd', onDone: 'done' },\r\n            on: {\r\n              RESIZE: '#overlay.resizing',\r\n              SNAP: '#overlay.snapping',\r\n              CLOSE: '#overlay.closing',\r\n              DRAG: '#overlay.dragging',\r\n            },\r\n          },\r\n          done: { type: 'final' },\r\n        },\r\n        on: {\r\n          SNAP: { target: 'snapping', actions: 'onSnapEnd' },\r\n          RESIZE: { target: '#overlay.resizing', actions: 'onSnapCancel' },\r\n          DRAG: { target: '#overlay.dragging', actions: 'onSnapCancel' },\r\n          CLOSE: { target: '#overlay.closing', actions: 'onSnapCancel' },\r\n        },\r\n        onDone: 'open',\r\n      },\r\n      resizing: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onResizeStart',\r\n              onDone: 'resizingSmoothly',\r\n            },\r\n          },\r\n          resizingSmoothly: {\r\n            invoke: { src: 'resizeSmoothly', onDone: 'end' },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onResizeEnd', onDone: 'done' },\r\n            on: {\r\n              SNAP: '#overlay.snapping',\r\n              CLOSE: '#overlay.closing',\r\n              DRAG: '#overlay.dragging',\r\n            },\r\n          },\r\n          done: { type: 'final' },\r\n        },\r\n        on: {\r\n          RESIZE: { target: 'resizing', actions: 'onResizeEnd' },\r\n          SNAP: { target: 'snapping', actions: 'onResizeCancel' },\r\n          DRAG: { target: '#overlay.dragging', actions: 'onResizeCancel' },\r\n          CLOSE: { target: '#overlay.closing', actions: 'onResizeCancel' },\r\n        },\r\n        onDone: 'open',\r\n      },\r\n      closing: {\r\n        initial: 'start',\r\n        states: {\r\n          start: {\r\n            invoke: {\r\n              src: 'onCloseStart',\r\n              onDone: 'deactivating',\r\n            },\r\n            on: { OPEN: { target: '#overlay.open', actions: 'onCloseCancel' } },\r\n          },\r\n          deactivating: {\r\n            invoke: { src: 'deactivate', onDone: 'closingSmoothly' },\r\n          },\r\n          closingSmoothly: {\r\n            invoke: { src: 'closeSmoothly', onDone: 'end' },\r\n          },\r\n          end: {\r\n            invoke: { src: 'onCloseEnd', onDone: 'done' },\r\n            on: {\r\n              OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\r\n            },\r\n          },\r\n          done: { type: 'final' },\r\n        },\r\n        on: {\r\n          CLOSE: undefined,\r\n          OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\r\n        },\r\n        onDone: 'closed',\r\n      },\r\n    },\r\n    on: {\r\n      CLOSE: 'closing',\r\n    },\r\n  },\r\n  {\r\n    actions: {\r\n      onOpenCancel: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onOpenCancel', { context, event })\r\n      },\r\n      onSnapCancel: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onSnapCancel', { context, event })\r\n      },\r\n      onResizeCancel: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onResizeCancel', { context, event })\r\n      },\r\n      onCloseCancel: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onCloseCancel', { context, event })\r\n      },\r\n      onOpenEnd: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onOpenCancel', { context, event })\r\n      },\r\n      onSnapEnd: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onSnapEnd', { context, event })\r\n      },\r\n      onResizeEnd: (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.log('onResizeEnd', { context, event })\r\n      },\r\n    },\r\n    services: {\r\n      onSnapStart: async () => {\r\n        await sleep()\r\n      },\r\n      onOpenStart: async () => {\r\n        await sleep()\r\n      },\r\n      onCloseStart: async () => {\r\n        await sleep()\r\n      },\r\n      onResizeStart: async () => {\r\n        await sleep()\r\n      },\r\n      onSnapEnd: async () => {\r\n        await sleep()\r\n      },\r\n      onOpenEnd: async () => {\r\n        await sleep()\r\n      },\r\n      onCloseEnd: async () => {\r\n        await sleep()\r\n      },\r\n      onResizeEnd: async () => {\r\n        await sleep()\r\n      },\r\n      renderVisuallyHidden: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('renderVisuallyHidden')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      activate: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('activate')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      deactivate: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('deactivate')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      openSmoothly: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('openSmoothly')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      openImmediately: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('openImmediately')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      snapSmoothly: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('snapSmoothly')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      resizeSmoothly: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('resizeSmoothly')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n      closeSmoothly: async (context, event) => {\r\n        __CONSOLE__REPLACEMENT__?.group('closeSmoothly')\r\n        __CONSOLE__REPLACEMENT__?.log({ context, event })\r\n        await sleep()\r\n        __CONSOLE__REPLACEMENT__?.groupEnd()\r\n      },\r\n    },\r\n    guards: { initiallyClosed, initiallyOpen },\r\n  }\r\n)\r\n","//\r\n// In order to greatly reduce complexity this component is designed to always transition to open on mount, and then\r\n// transition to a closed state later. This ensures that all memory used to keep track of animation and gesture state\r\n// can be reclaimed after the sheet is closed and then unmounted.\r\n// It also ensures that when transitioning to open on mount the state is always clean, not affected by previous states that could\r\n// cause race conditions.\r\n\r\nimport { useMachine } from '@xstate/react'\r\nimport React, {\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from 'react'\r\nimport { animated, config } from 'react-spring'\r\nimport { rubberbandIfOutOfBounds, useDrag } from 'react-use-gesture'\r\nimport {\r\n  useAriaHider,\r\n  useFocusTrap,\r\n  useLayoutEffect,\r\n  useReady,\r\n  useReducedMotion,\r\n  useScrollLock,\r\n  useSnapPoints,\r\n  useSpring,\r\n  useSpringInterpolations,\r\n} from './hooks'\r\nimport { overlayMachine } from './machines/overlay'\r\nimport type {\r\n  defaultSnapProps,\r\n  Props,\r\n  RefHandles,\r\n  ResizeSource,\r\n  SnapPointProps,\r\n} from './types'\r\nimport { debugging } from './utils'\r\n\r\nconst { tension, friction } = config.default\r\n\r\n// @TODO implement AbortController to deal with race conditions\r\n\r\n// @TODO rename to SpringBottomSheet and allow userland to import it directly, for those who want maximum control and minimal bundlesize\r\nexport const BottomSheet = React.forwardRef<\r\n  RefHandles,\r\n  {\r\n    initialState: 'OPEN' | 'CLOSED'\r\n    lastSnapRef: React.MutableRefObject<number | null>\r\n  } & Props\r\n>(function BottomSheetInternal(\r\n  {\r\n    children,\r\n    sibling,\r\n    className,\r\n    footer,\r\n    header,\r\n    open: _open,\r\n    initialState,\r\n    lastSnapRef,\r\n    initialFocusRef,\r\n    onDismiss,\r\n    maxHeight: controlledMaxHeight,\r\n    defaultSnap: getDefaultSnap = _defaultSnap,\r\n    snapPoints: getSnapPoints = _snapPoints,\r\n    blocking = true,\r\n    scrollLocking = true,\r\n    style,\r\n    onSpringStart,\r\n    onSpringCancel,\r\n    onSpringEnd,\r\n    reserveScrollBarGap = blocking,\r\n    expandOnContentDrag = false,\r\n    disableExpandList = [],\r\n    preventPullUp = false,\r\n    ...props\r\n  },\r\n  forwardRef\r\n) {\r\n  // Before any animations can start we need to measure a few things, like the viewport and the dimensions of content, and header + footer if they exist\r\n  // @TODO make ready its own state perhaps, before open or closed\r\n  const { ready, registerReady } = useReady()\r\n\r\n  // Controls the drag handler, used by spring operations that happen outside the render loop in React\r\n  const canDragRef = useRef(false)\r\n\r\n  // This way apps don't have to remember to wrap their callbacks in useCallback to avoid breaking the sheet\r\n  const onSpringStartRef = useRef(onSpringStart)\r\n  const onSpringCancelRef = useRef(onSpringCancel)\r\n  const onSpringEndRef = useRef(onSpringEnd)\r\n  useEffect(() => {\r\n    onSpringStartRef.current = onSpringStart\r\n    onSpringCancelRef.current = onSpringCancel\r\n    onSpringEndRef.current = onSpringEnd\r\n  }, [onSpringCancel, onSpringStart, onSpringEnd])\r\n\r\n  // Behold, the engine of it all!\r\n  const [spring, set] = useSpring()\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const contentRef = useRef<HTMLDivElement>(null)\r\n  const headerRef = useRef<HTMLDivElement>(null)\r\n  const footerRef = useRef<HTMLDivElement>(null)\r\n  const overlayRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  // Keeps track of the current height, or the height transitioning to\r\n  const heightRef = useRef(0)\r\n  const resizeSourceRef = useRef<ResizeSource>()\r\n  const preventScrollingRef = useRef(false)\r\n\r\n  const prefersReducedMotion = useReducedMotion()\r\n\r\n  // \"Plugins\" huhuhu\r\n  const scrollLockRef = useScrollLock({\r\n    targetRef: scrollRef,\r\n    enabled: ready && scrollLocking,\r\n    reserveScrollBarGap,\r\n  })\r\n  const ariaHiderRef = useAriaHider({\r\n    targetRef: containerRef,\r\n    enabled: ready && blocking,\r\n  })\r\n  const focusTrapRef = useFocusTrap({\r\n    targetRef: containerRef,\r\n    fallbackRef: overlayRef,\r\n    initialFocusRef: initialFocusRef || undefined,\r\n    enabled: ready && blocking && initialFocusRef !== false,\r\n  })\r\n\r\n  const { minSnap, maxSnap, maxHeight, findSnap } = useSnapPoints({\r\n    contentRef,\r\n    controlledMaxHeight,\r\n    footerEnabled: !!footer,\r\n    footerRef,\r\n    getSnapPoints,\r\n    headerEnabled: header !== false,\r\n    headerRef,\r\n    heightRef,\r\n    lastSnapRef,\r\n    ready,\r\n    registerReady,\r\n    resizeSourceRef,\r\n  })\r\n\r\n  // Setup refs that are used in cases where full control is needed over when a side effect is executed\r\n  const maxHeightRef = useRef(maxHeight)\r\n  const minSnapRef = useRef(minSnap)\r\n  const maxSnapRef = useRef(maxSnap)\r\n  const findSnapRef = useRef(findSnap)\r\n  const defaultSnapRef = useRef(0)\r\n  // Sync the refs with current state, giving the spring full control over when to respond to changes\r\n  useLayoutEffect(() => {\r\n    maxHeightRef.current = maxHeight\r\n    maxSnapRef.current = maxSnap\r\n    minSnapRef.current = minSnap\r\n    findSnapRef.current = findSnap\r\n    defaultSnapRef.current = findSnap(getDefaultSnap)\r\n  }, [findSnap, getDefaultSnap, maxHeight, maxSnap, minSnap])\r\n\r\n  // New utility for using events safely\r\n  const asyncSet = useCallback<typeof set>(\r\n    // @ts-ignore\r\n    ({ onRest, config: { velocity = 1, ...config } = {}, ...opts }) =>\r\n      // @ts-expect-error\r\n      new Promise((resolve) =>\r\n        set({\r\n          ...opts,\r\n          config: {\r\n            velocity,\r\n            ...config,\r\n            // @see https://springs.pomb.us\r\n            mass: 1,\r\n            // \"stiffness\"\r\n            tension,\r\n            // \"damping\"\r\n            friction: Math.max(\r\n              friction,\r\n              friction + (friction - friction * velocity)\r\n            ),\r\n          },\r\n          onRest: (...args) => {\r\n            // @ts-expect-error\r\n            resolve(...args)\r\n            onRest?.(...args)\r\n          },\r\n        })\r\n      ),\r\n    [set]\r\n  )\r\n  const [current, send] = useMachine(overlayMachine, {\r\n    devTools: debugging,\r\n    actions: {\r\n      onOpenCancel: useCallback(\r\n        () => onSpringCancelRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onSnapCancel: useCallback(\r\n        (context) =>\r\n          onSpringCancelRef.current?.({\r\n            type: 'SNAP',\r\n            source: context.snapSource,\r\n          }),\r\n        []\r\n      ),\r\n      onCloseCancel: useCallback(\r\n        () => onSpringCancelRef.current?.({ type: 'CLOSE' }),\r\n        []\r\n      ),\r\n      onResizeCancel: useCallback(\r\n        () =>\r\n          onSpringCancelRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n      onOpenEnd: useCallback(\r\n        () => onSpringEndRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onSnapEnd: useCallback(\r\n        (context, event) =>\r\n          onSpringEndRef.current?.({\r\n            type: 'SNAP',\r\n            source: context.snapSource,\r\n          }),\r\n        []\r\n      ),\r\n      onResizeEnd: useCallback(\r\n        () =>\r\n          onSpringEndRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n    },\r\n    context: { initialState },\r\n    services: {\r\n      onSnapStart: useCallback(\r\n        async (context, event) =>\r\n          onSpringStartRef.current?.({\r\n            type: 'SNAP',\r\n            source: event.payload.source || 'custom',\r\n          }),\r\n        []\r\n      ),\r\n      onOpenStart: useCallback(\r\n        async () => onSpringStartRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onCloseStart: useCallback(\r\n        async () => onSpringStartRef.current?.({ type: 'CLOSE' }),\r\n        []\r\n      ),\r\n      onResizeStart: useCallback(\r\n        async () =>\r\n          onSpringStartRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n      onSnapEnd: useCallback(\r\n        async (context, event) =>\r\n          onSpringEndRef.current?.({\r\n            type: 'SNAP',\r\n            source: context.snapSource,\r\n          }),\r\n        []\r\n      ),\r\n      onOpenEnd: useCallback(\r\n        async () => onSpringEndRef.current?.({ type: 'OPEN' }),\r\n        []\r\n      ),\r\n      onCloseEnd: useCallback(\r\n        async () => onSpringEndRef.current?.({ type: 'CLOSE' }),\r\n        []\r\n      ),\r\n      onResizeEnd: useCallback(\r\n        async () =>\r\n          onSpringEndRef.current?.({\r\n            type: 'RESIZE',\r\n            source: resizeSourceRef.current,\r\n          }),\r\n        []\r\n      ),\r\n      renderVisuallyHidden: useCallback(\r\n        async (context, event) => {\r\n          await asyncSet({\r\n            y: defaultSnapRef.current,\r\n            ready: 0,\r\n            maxHeight: maxHeightRef.current,\r\n            maxSnap: maxSnapRef.current,\r\n            // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n            minSnap: defaultSnapRef.current,\r\n            immediate: true,\r\n          })\r\n        },\r\n        [asyncSet]\r\n      ),\r\n      activate: useCallback(\r\n        async (context, event) => {\r\n          canDragRef.current = true\r\n          await Promise.all([\r\n            scrollLockRef.current.activate(),\r\n            focusTrapRef.current.activate(),\r\n            ariaHiderRef.current.activate(),\r\n          ])\r\n        },\r\n        [ariaHiderRef, focusTrapRef, scrollLockRef]\r\n      ),\r\n      deactivate: useCallback(async () => {\r\n        scrollLockRef.current.deactivate()\r\n        focusTrapRef.current.deactivate()\r\n        ariaHiderRef.current.deactivate()\r\n        canDragRef.current = false\r\n      }, [ariaHiderRef, focusTrapRef, scrollLockRef]),\r\n      openImmediately: useCallback(async () => {\r\n        heightRef.current = defaultSnapRef.current\r\n        await asyncSet({\r\n          y: defaultSnapRef.current,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n          minSnap: defaultSnapRef.current,\r\n          immediate: true,\r\n        })\r\n      }, [asyncSet]),\r\n      openSmoothly: useCallback(async () => {\r\n        await asyncSet({\r\n          y: 0,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n          minSnap: defaultSnapRef.current,\r\n          immediate: true,\r\n        })\r\n\r\n        heightRef.current = defaultSnapRef.current\r\n\r\n        await asyncSet({\r\n          y: defaultSnapRef.current,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\r\n          minSnap: defaultSnapRef.current,\r\n          immediate: prefersReducedMotion.current,\r\n        })\r\n      }, [asyncSet, prefersReducedMotion]),\r\n      snapSmoothly: useCallback(\r\n        async (context, event) => {\r\n          const snap = findSnapRef.current(context.y)\r\n          heightRef.current = snap\r\n          lastSnapRef.current = snap\r\n          await asyncSet({\r\n            y: snap,\r\n            ready: 1,\r\n            maxHeight: maxHeightRef.current,\r\n            maxSnap: maxSnapRef.current,\r\n            minSnap: minSnapRef.current,\r\n            immediate: prefersReducedMotion.current,\r\n            config: { velocity: context.velocity },\r\n          })\r\n        },\r\n        [asyncSet, lastSnapRef, prefersReducedMotion]\r\n      ),\r\n      resizeSmoothly: useCallback(async () => {\r\n        const snap = findSnapRef.current(heightRef.current)\r\n        heightRef.current = snap\r\n        lastSnapRef.current = snap\r\n        await asyncSet({\r\n          y: snap,\r\n          ready: 1,\r\n          maxHeight: maxHeightRef.current,\r\n          maxSnap: maxSnapRef.current,\r\n          minSnap: minSnapRef.current,\r\n          immediate:\r\n            resizeSourceRef.current === 'element'\r\n              ? prefersReducedMotion.current\r\n              : true,\r\n        })\r\n      }, [asyncSet, lastSnapRef, prefersReducedMotion]),\r\n      closeSmoothly: useCallback(\r\n        async (context, event) => {\r\n          // Avoid animating the height property on close and stay within FLIP bounds by upping the minSnap\r\n          asyncSet({\r\n            minSnap: heightRef.current,\r\n            immediate: true,\r\n          })\r\n\r\n          heightRef.current = 0\r\n\r\n          await asyncSet({\r\n            y: 0,\r\n            maxHeight: maxHeightRef.current,\r\n            maxSnap: maxSnapRef.current,\r\n            immediate: prefersReducedMotion.current,\r\n          })\r\n\r\n          await asyncSet({ ready: 0, immediate: true })\r\n        },\r\n        [asyncSet, prefersReducedMotion]\r\n      ),\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (_open) {\r\n      send('OPEN')\r\n    } else {\r\n      send('CLOSE')\r\n    }\r\n  }, [_open, send, ready])\r\n  useLayoutEffect(() => {\r\n    // Adjust the height whenever the snap points are changed due to resize events\r\n    if (maxHeight || maxSnap || minSnap) {\r\n      send('RESIZE')\r\n    }\r\n  }, [maxHeight, maxSnap, minSnap, send])\r\n  useEffect(\r\n    () => () => {\r\n      // Ensure effects are cleaned up on unmount, in case they're not cleaned up otherwise\r\n      scrollLockRef.current.deactivate()\r\n      focusTrapRef.current.deactivate()\r\n      ariaHiderRef.current.deactivate()\r\n    },\r\n    [ariaHiderRef, focusTrapRef, scrollLockRef]\r\n  )\r\n\r\n  useImperativeHandle(\r\n    forwardRef,\r\n    () => ({\r\n      snapTo: (numberOrCallback, { velocity = 1, source = 'custom' } = {}) => {\r\n        send('SNAP', {\r\n          payload: {\r\n            y: findSnapRef.current(numberOrCallback),\r\n            velocity,\r\n            source,\r\n          },\r\n        })\r\n      },\r\n      get height() {\r\n        return heightRef.current\r\n      },\r\n    }),\r\n    [send]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const elem = scrollRef.current\r\n\r\n    const preventScrolling = e => {\r\n      const disableExpandListNodes = disableExpandList.map(selector => containerRef.current.querySelector(selector)).filter(Boolean);\r\n      if (disableExpandListNodes.length && disableExpandListNodes.some(disableNode => disableNode.contains(e.target))) {\r\n        return true\r\n      } else if (preventScrollingRef.current && elem.scrollTop <= 0) {\r\n        e.preventDefault()\r\n      }\r\n    }\r\n\r\n    let prevValue = 0;\r\n    const preventSafariOverscrollOnStart = e => {\r\n      if (elem.scrollTop < 0) {\r\n        prevValue = elem.scrollTop;\r\n      }\r\n    }\r\n  \r\n    const preventSafariOverscrollOnMove = (e) => {\r\n      if (elem.scrollTop < 0 && elem.scrollTop < prevValue) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    if (expandOnContentDrag) {\r\n      elem.addEventListener('scroll', preventScrolling)\r\n      elem.addEventListener('touchmove', preventScrolling)\r\n      elem.addEventListener('touchmove', preventSafariOverscrollOnMove);\r\n      elem.addEventListener('touchstart', preventSafariOverscrollOnStart, {\r\n        passive: true\r\n      });\r\n    }\r\n    return () => {\r\n      elem.removeEventListener('scroll', preventScrolling)\r\n      elem.removeEventListener('touchmove', preventScrolling)\r\n      elem.removeEventListener('touchmove', preventSafariOverscrollOnMove);\r\n      elem.removeEventListener('touchstart', preventSafariOverscrollOnStart);\r\n    }\r\n  }, [expandOnContentDrag, scrollRef, disableExpandList])\r\n\r\n  const handleDrag = ({\r\n    args: [{ closeOnTap = false, isContentDragging = false } = {}] = [],\r\n    cancel,\r\n    direction: [, direction],\r\n    down,\r\n    first,\r\n    last,\r\n    memo = spring.y.get(),\r\n    movement: [, _my],\r\n    tap,\r\n    velocity,\r\n    event,\r\n  }) => {\r\n    const my = _my * -1\r\n    const hasScroll = scrollRef.current.scrollHeight > scrollRef.current.clientHeight;\r\n    if (containerRef.current && disableExpandList.length) {\r\n      const disableExpandListNodes = disableExpandList.map(selector => containerRef.current.querySelector(selector)).filter(Boolean);\r\n      if (disableExpandListNodes.length && disableExpandListNodes.some(disableNode => disableNode.contains(event.target))) {\r\n        cancel()\r\n        return memo\r\n      }\r\n    }\r\n    \r\n    // Cancel the drag operation if the canDrag state changed\r\n    if (!canDragRef.current) {\r\n      __CONSOLE__REPLACEMENT__?.log('handleDrag cancelled dragging because canDragRef is false')\r\n      cancel()\r\n      return memo\r\n    }\r\n\r\n    if (onDismiss && closeOnTap && tap) {\r\n      cancel()\r\n      // Runs onDismiss in a timeout to avoid tap events on the backdrop from triggering click events on elements underneath\r\n      setTimeout(() => onDismiss(), 10)\r\n      return memo\r\n    }\r\n\r\n    // Filter out taps\r\n    if (tap) {\r\n      return memo\r\n    }\r\n\r\n    const rawY = memo + my\r\n    const predictedDistance = my * velocity\r\n    const predictedY = Math.max(\r\n      minSnapRef.current,\r\n      Math.min(maxSnapRef.current, rawY + predictedDistance * 2)\r\n    )\r\n\r\n    if (\r\n      !down &&\r\n      onDismiss &&\r\n      direction > 0 &&\r\n      rawY + predictedDistance < minSnapRef.current / 2\r\n      && (!hasScroll || scrollRef.current.scrollTop <= 0)\r\n    ) {\r\n      cancel()\r\n      onDismiss()\r\n      return memo\r\n    }\r\n\r\n    let newY = down\r\n      ? // @TODO figure out a better way to deal with rubberband overshooting if min and max have the same value\r\n        !onDismiss && minSnapRef.current === maxSnapRef.current\r\n        ? rawY < minSnapRef.current\r\n          ? rubberbandIfOutOfBounds(\r\n              rawY,\r\n              minSnapRef.current,\r\n              maxSnapRef.current * 2,\r\n              0.55\r\n            )\r\n          : rubberbandIfOutOfBounds(\r\n              rawY,\r\n              minSnapRef.current / 2,\r\n              maxSnapRef.current,\r\n              0.55\r\n            )\r\n        : rubberbandIfOutOfBounds(\r\n            rawY,\r\n            onDismiss ? 0 : minSnapRef.current,\r\n            maxSnapRef.current,\r\n            0.55\r\n          )\r\n      : predictedY\r\n    \r\n    if (preventPullUp) {\r\n      if (direction === 0) {\r\n        return memo\r\n      }\r\n      if ((direction < 0 && newY > maxSnap && _my <= 0) || (direction > 0 && newY > maxSnap && _my <= 0)) {\r\n        // realize feature: all pop-ups shouldn't be pulled up by certain if it is fully open\r\n        // if direction up, and newY coordinate >= maxSnap, and distance Y from start point to current point (_my) <= 0 don't change height modal\r\n        // or if direction down, and newY coordinate >= maxSnap, and distance Y from start point to current point (_my) <= 0 don't change height modal\r\n        return memo;\r\n      }\r\n    }\r\n\r\n    if (expandOnContentDrag && isContentDragging) {\r\n      if (newY >= maxSnapRef.current) {\r\n        newY = maxSnapRef.current\r\n      }\r\n\r\n      if (memo === maxSnapRef.current && scrollRef.current.scrollTop > 0) {\r\n        newY = maxSnapRef.current\r\n      }\r\n\r\n      preventScrollingRef.current = newY < maxSnapRef.current;\r\n    } else {\r\n      preventScrollingRef.current = false\r\n    }\r\n\r\n    if (first) {\r\n      send('DRAG')\r\n    }\r\n\r\n    if (last) {\r\n      send('SNAP', {\r\n        payload: {\r\n          y: newY,\r\n          velocity: velocity > 0.05 ? velocity : 1,\r\n          source: 'dragging',\r\n        },\r\n      })\r\n\r\n      return memo\r\n    }\r\n\r\n    // @TODO too many rerenders\r\n    //send('DRAG', { y: newY, velocity })\r\n    //*\r\n    set({\r\n      y: newY,\r\n      ready: 1,\r\n      maxHeight: maxHeightRef.current,\r\n      maxSnap: maxSnapRef.current,\r\n      minSnap: minSnapRef.current,\r\n      immediate: true,\r\n      config: { velocity },\r\n    })\r\n    // */\r\n\r\n    return memo\r\n  }\r\n\r\n  const bind = useDrag(handleDrag, {\r\n    filterTaps: true,\r\n  })\r\n\r\n  if (Number.isNaN(maxSnapRef.current)) {\r\n    throw new TypeError('maxSnapRef is NaN!!')\r\n  }\r\n  if (Number.isNaN(minSnapRef.current)) {\r\n    throw new TypeError('minSnapRef is NaN!!')\r\n  }\r\n\r\n  const interpolations = useSpringInterpolations({ spring })\r\n\r\n  return (\r\n    <animated.div\r\n      {...props}\r\n      data-rsbs-root\r\n      data-rsbs-state={publicStates.find(current.matches)}\r\n      data-rsbs-is-blocking={blocking}\r\n      data-rsbs-is-dismissable={!!onDismiss}\r\n      data-rsbs-has-header={!!header}\r\n      data-rsbs-has-footer={!!footer}\r\n      className={className}\r\n      ref={containerRef}\r\n      style={{\r\n        // spread in the interpolations yeees\r\n        ...interpolations,\r\n        // but allow overriding them/disabling them\r\n        ...style,\r\n        // Not overridable as the \"focus lock with opacity 0\" trick rely on it\r\n        // @TODO the line below only fails on TS <4\r\n        // @ts-ignore\r\n        opacity: spring.ready,\r\n      }}\r\n    >\r\n      {sibling}\r\n      {blocking && (\r\n        <div\r\n          // This component needs to be placed outside bottom-sheet, as bottom-sheet uses transform and thus creates a new context\r\n          // that clips this element to the container, not allowing it to cover the full page.\r\n          key=\"backdrop\"\r\n          data-rsbs-backdrop\r\n          {...bind({ closeOnTap: true })}\r\n        />\r\n      )}\r\n      <div\r\n        key=\"overlay\"\r\n        aria-modal=\"true\"\r\n        role=\"dialog\"\r\n        data-rsbs-overlay\r\n        tabIndex={-1}\r\n        ref={overlayRef}\r\n        onKeyDown={(event) => {\r\n          if (event.key === 'Escape') {\r\n            // Always stop propagation, to avoid weirdness for bottom sheets inside other bottom sheets\r\n            event.stopPropagation()\r\n            if (onDismiss) onDismiss()\r\n          }\r\n        }}\r\n      >\r\n        {header !== false && (\r\n          <div key=\"header\" data-rsbs-header ref={headerRef} {...bind()}>\r\n            {header}\r\n          </div>\r\n        )}\r\n        <div key=\"scroll\" data-rsbs-scroll ref={scrollRef} {...(expandOnContentDrag ? bind({ isContentDragging: true }) : {})}>\r\n          <div data-rsbs-content ref={contentRef}>\r\n            {children}\r\n          </div>\r\n        </div>\r\n        {footer && (\r\n          <div key=\"footer\" ref={footerRef} data-rsbs-footer {...bind()}>\r\n            {footer}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </animated.div>\r\n  )\r\n})\r\n\r\n// Used for the data attribute, list over states available to CSS selectors\r\nconst publicStates = [\r\n  'closed',\r\n  'opening',\r\n  'open',\r\n  'closing',\r\n  'dragging',\r\n  'snapping',\r\n  'resizing',\r\n]\r\n\r\n// Default prop values that are callbacks, and it's nice to save some memory and reuse their instances since they're pure\r\nfunction _defaultSnap({ snapPoints, lastSnap }: defaultSnapProps) {\r\n  return lastSnap ?? Math.min(...snapPoints)\r\n}\r\nfunction _snapPoints({ minHeight }: SnapPointProps) {\r\n  return minHeight\r\n}\r\n","// Keeps track of wether everything is good to go or not, in the most efficient way possible\r\n\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nexport function useReady() {\r\n  const [ready, setReady] = useState(false)\r\n  const [readyMap, updateReadyMap] = useState<{ [key: string]: boolean }>({})\r\n\r\n  const registerReady = useCallback((key: string) => {\r\n    // Register the check we're gonna wait for until it's ready\r\n    updateReadyMap((ready) => ({ ...ready, [key]: false }))\r\n\r\n    return () => {\r\n      // Set it to ready\r\n      updateReadyMap((ready) => ({ ...ready, [key]: true }))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const states = Object.values(readyMap)\r\n\r\n    if (states.length === 0) {\r\n      return\r\n    }\r\n\r\n    const isReady = states.every(Boolean)\r\n    if (isReady) {\r\n      setReady(true)\r\n    }\r\n  }, [readyMap])\r\n\r\n  return { ready, registerReady }\r\n}\r\n","import { useDebugValue, useEffect, useMemo, useRef } from 'react'\r\n\r\n// @TODO refactor to addEventListener\r\nexport function useReducedMotion() {\r\n  const mql = useMemo(\r\n    () =>\r\n      typeof window !== 'undefined'\r\n        ? window.matchMedia('(prefers-reduced-motion: reduce)')\r\n        : null,\r\n    []\r\n  )\r\n  const ref = useRef(mql?.matches)\r\n\r\n  useDebugValue(ref.current ? 'reduce' : 'no-preference')\r\n\r\n  useEffect(() => {\r\n    const handler = (event) => {\r\n      ref.current = event.matches\r\n    }\r\n    mql?.addListener(handler)\r\n\r\n    return () => mql?.removeListener(handler)\r\n  }, [mql])\r\n\r\n  return ref\r\n}\r\n","import { useSpring as useReactSpring } from 'react-spring'\r\n\r\n// Behold, the engine of it all!\r\n// Put in this file befause it makes it easier to type and I'm lazy! :D\r\n\r\nexport function useSpring() {\r\n  return useReactSpring(() => ({\r\n    y: 0,\r\n    ready: 0,\r\n    maxHeight: 0,\r\n    minSnap: 0,\r\n    maxSnap: 0,\r\n  }))\r\n}\r\n\r\nexport type Spring = ReturnType<typeof useSpring>[0]\r\nexport type SpringSet = ReturnType<typeof useSpring>[1]\r\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock'\r\nimport { useDebugValue, useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Handle scroll locking to ensure a good dragging experience on Android and iOS.\r\n *\r\n * On iOS the following may happen if scroll isn't locked:\r\n * - When dragging the sheet the background gets dragged at the same time.\r\n * - When dragging the page scroll is also affected, causing the drag to feel buggy and \"slow\".\r\n *\r\n * On Android it causes the chrome toolbar to pop down as you drag down, and hide as you drag up.\r\n * When it's in between two toolbar states it causes the framerate to drop way below 60fps on\r\n * the bottom sheet drag interaction.\r\n */\r\nexport function useScrollLock({\r\n  targetRef,\r\n  enabled,\r\n  reserveScrollBarGap,\r\n}: {\r\n  targetRef: React.RefObject<Element>\r\n  enabled: boolean\r\n  reserveScrollBarGap: boolean\r\n}) {\r\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\r\n    activate: () => {\r\n      throw new TypeError('Tried to activate scroll lock too early')\r\n    },\r\n    deactivate: () => {},\r\n  })\r\n\r\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\r\n\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      ref.current.deactivate()\r\n      ref.current = { activate: () => {}, deactivate: () => {} }\r\n      return\r\n    }\r\n\r\n    const target = targetRef.current\r\n    let active = false\r\n\r\n    ref.current = {\r\n      activate: () => {\r\n        if (active) return\r\n        active = true\r\n        disableBodyScroll(target, {\r\n          allowTouchMove: (el) => el.closest('[data-body-scroll-lock-ignore]'),\r\n          reserveScrollBarGap,\r\n        })\r\n      },\r\n      deactivate: () => {\r\n        if (!active) return\r\n        active = false\r\n        enableBodyScroll(target)\r\n      },\r\n    }\r\n  }, [enabled, targetRef, reserveScrollBarGap])\r\n\r\n  return ref\r\n}\r\n","import React, { useDebugValue, useEffect, useRef } from 'react'\r\n\r\n// Handle hiding and restoring aria-hidden attributes\r\nexport function useAriaHider({\r\n  targetRef,\r\n  enabled,\r\n}: {\r\n  targetRef: React.RefObject<Element>\r\n  enabled: boolean\r\n}) {\r\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\r\n    activate: () => {\r\n      throw new TypeError('Tried to activate aria hider too early')\r\n    },\r\n    deactivate: () => {},\r\n  })\r\n\r\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\r\n\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      ref.current.deactivate()\r\n      ref.current = { activate: () => {}, deactivate: () => {} }\r\n      return\r\n    }\r\n\r\n    const target = targetRef.current\r\n    let active = false\r\n    let originalValues: (null | string)[] = []\r\n    let rootNodes: Element[] = []\r\n\r\n    ref.current = {\r\n      activate: () => {\r\n        if (active) return\r\n        active = true\r\n\r\n        const parentNode = target.parentNode\r\n\r\n        document.querySelectorAll('body > *').forEach((node) => {\r\n          if (node === parentNode) {\r\n            return\r\n          }\r\n          let attr = node.getAttribute('aria-hidden')\r\n          let alreadyHidden = attr !== null && attr !== 'false'\r\n          if (alreadyHidden) {\r\n            return\r\n          }\r\n          originalValues.push(attr)\r\n          rootNodes.push(node)\r\n          node.setAttribute('aria-hidden', 'true')\r\n        })\r\n      },\r\n      deactivate: () => {\r\n        if (!active) return\r\n        active = false\r\n\r\n        rootNodes.forEach((node, index) => {\r\n          let originalValue = originalValues[index]\r\n          if (originalValue === null) {\r\n            node.removeAttribute('aria-hidden')\r\n          } else {\r\n            node.setAttribute('aria-hidden', originalValue)\r\n          }\r\n        })\r\n        originalValues = []\r\n        rootNodes = []\r\n      },\r\n    }\r\n  }, [targetRef, enabled])\r\n\r\n  return ref\r\n}\r\n","import { createFocusTrap } from 'focus-trap'\r\nimport { useDebugValue, useEffect, useRef } from 'react'\r\n\r\nexport function useFocusTrap({\r\n  targetRef,\r\n  fallbackRef,\r\n  initialFocusRef,\r\n  enabled,\r\n}: {\r\n  targetRef: React.RefObject<HTMLElement>\r\n  fallbackRef: React.RefObject<HTMLElement>\r\n  initialFocusRef?: React.RefObject<HTMLElement>\r\n  enabled: boolean\r\n}) {\r\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\r\n    activate: () => {\r\n      throw new TypeError('Tried to activate focus trap too early')\r\n    },\r\n    deactivate: () => {},\r\n  })\r\n\r\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\r\n\r\n  useEffect(() => {\r\n    if (!enabled) {\r\n      ref.current.deactivate()\r\n      ref.current = { activate: () => {}, deactivate: () => {} }\r\n      return\r\n    }\r\n\r\n    const fallback = fallbackRef.current\r\n    const trap = createFocusTrap(targetRef.current, {\r\n      onActivate:\r\n        process.env.NODE_ENV !== 'production'\r\n          ? () => {\r\n              __CONSOLE__REPLACEMENT__?.log('focus activate')\r\n            }\r\n          : undefined,\r\n      // If initialFocusRef is manually specified we don't want the first tabbable element to receive focus if initialFocusRef can't be found\r\n      initialFocus: initialFocusRef\r\n        ? () => initialFocusRef?.current || fallback\r\n        : undefined,\r\n      fallbackFocus: fallback,\r\n      escapeDeactivates: false,\r\n      clickOutsideDeactivates: false,\r\n    })\r\n    let active = false\r\n\r\n    ref.current = {\r\n      activate: async () => {\r\n        if (active) return\r\n        active = true\r\n\r\n        await trap.activate()\r\n        // it's difficult to know exactly when focus is udpated https://github.com/focus-trap/focus-trap/blob/036a72ec48b85414dda00ec0c40d631c8f0ae5ce/index.js#L369-L371\r\n        // This timeout is attempting to compromise between a reasonable guess, as well as not delaying the open transition more than necessary\r\n        await new Promise((resolve) => setTimeout(() => resolve(void 1), 0))\r\n      },\r\n      deactivate: () => {\r\n        if (!active) return\r\n        active = false\r\n\r\n        trap.deactivate()\r\n      },\r\n    }\r\n  }, [enabled, fallbackRef, initialFocusRef, targetRef])\r\n\r\n  return ref\r\n}\r\n","import { to } from 'react-spring'\r\nimport type { Spring } from './useSpring'\r\nimport { clamp } from '../utils'\r\n\r\n// It's a bit easier to ensure interpolations don't accidentally use the wrong variables by\r\n// putting them here, in their own closure with explicitly defined variables used\r\n\r\n// Note that the callbacks in the interpolation functions close over their scope every time react renders\r\n// so it's important that if anything can change outside of render that needs to be available\r\n// in the interpolation then a ref must be used\r\n\r\nexport function useSpringInterpolations({\r\n  spring,\r\n}: {\r\n  spring: Spring\r\n}): React.CSSProperties {\r\n  // This effect is for removing rounded corners on phones when the sheet touches the top of the browser chrome\r\n  // as it's really ugly with the gaps border radius creates. This ensures it looks sleek.\r\n  // @TODO the ts-ignore comments are because the `extrapolate` param isn't in the TS defs for some reason\r\n  const interpolateBorderRadius = to(\r\n    [spring.y, spring.maxHeight],\r\n    (y, maxHeight) => {\r\n      return `${Math.round(clamp(maxHeight - y, 0, 16))}px`\r\n    }\r\n  )\r\n\r\n  /*\r\n   * Only animate the height when absolute necessary\r\n   * @TODO currently it's only able to opt out of changing the height if there's just a single snapshot\r\n   *       but it should be possible to do it in other scenarios too, like on window resize,\r\n   *       or maybe even while dragging, but probably requires a more restrictive CSS.\r\n   *       As in now the sticky footer isn't overlapping the content, allowing `backdrop-filter: blur(8px)` effects.\r\n   *       A FLIP resize flow for content height would likely require the sticky elements to overlap the content area.\r\n   *       Could be done as a separat mode though, or a separate example CSS for max performance.\r\n   */\r\n  const interpolateHeight = to(\r\n    [spring.y, spring.minSnap, spring.maxSnap],\r\n    (y, minSnap, maxSnap) => `${clamp(y, minSnap, maxSnap)}px`\r\n  )\r\n\r\n  const interpolateY = to(\r\n    [spring.y, spring.minSnap, spring.maxSnap],\r\n    (y, minSnap, maxSnap) => {\r\n      if (y < minSnap) {\r\n        return `${minSnap - y}px`\r\n      }\r\n      if (y > maxSnap) {\r\n        return `${maxSnap - y}px`\r\n      }\r\n      return '0px'\r\n    }\r\n  )\r\n\r\n  const interpolateFiller = to(\r\n    [spring.y, spring.maxSnap],\r\n    (y, maxSnap) => {\r\n      if (y >= maxSnap) {\r\n        return Math.ceil(y - maxSnap)\r\n      }\r\n      return 0\r\n    }\r\n  )\r\n\r\n  const interpolateContentOpacity = to(\r\n    [spring.y, spring.minSnap],\r\n    (y, minSnap) => {\r\n      if (!minSnap) {\r\n        return 0\r\n      }\r\n      const minX = Math.max(minSnap / 2 - 45, 0)\r\n      const maxX = Math.min(minSnap / 2 + 45, minSnap)\r\n      const minY = 0\r\n      const maxY = 1\r\n\r\n      const slope = (maxY - minY) / (maxX - minX)\r\n      const res = (y - minX) * (slope + minY)\r\n      return clamp(res, 0, 1)\r\n    }\r\n  )\r\n\r\n  const interpolateBackdrop = to(\r\n    [spring.y, spring.minSnap],\r\n    (y, minSnap) => (minSnap ? clamp(y / minSnap, 0, 1) : 0)\r\n  )\r\n\r\n  return {\r\n    // Fancy content fade-in effect\r\n    ['--rsbs-content-opacity' as any]: interpolateContentOpacity,\r\n    // Fading in the backdrop\r\n    ['--rsbs-backdrop-opacity' as any]: interpolateBackdrop,\r\n    // Scaling the antigap in the bottom\r\n    ['--rsbs-antigap-scale-y' as any]: interpolateFiller,\r\n    // Shifts the position of the bottom sheet, used on open and close primarily as snap point changes usually only interpolate the height\r\n    ['--rsbs-overlay-translate-y' as any]: interpolateY,\r\n    // Remove rounded borders when full height, it looks much better this way\r\n    ['--rsbs-overlay-rounded' as any]: interpolateBorderRadius,\r\n    // Animates the height state, not the most performant way but it's the safest with regards to mobile browser and focus/scrolling that could happen while animating\r\n    ['--rsbs-overlay-h' as any]: interpolateHeight,\r\n  }\r\n}\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport * as Portal from '@radix-ui/react-portal';\r\nimport React, { forwardRef, useRef, useState, useCallback } from 'react'\r\nimport { BottomSheet as _BottomSheet } from './BottomSheet'\r\nimport type { Props, RefHandles, SpringEvent } from './types'\r\nimport { useLayoutEffect } from './hooks'\r\n\r\nexport type {\r\n  RefHandles as BottomSheetRef,\r\n  Props as BottomSheetProps,\r\n} from './types'\r\n\r\n// Because SSR is annoying to deal with, and all the million complaints about window, navigator and dom elenents!\r\nexport const BottomSheet = forwardRef<RefHandles, Props>(function BottomSheet(\r\n  { onSpringStart, onSpringEnd, skipInitialTransition, ...props },\r\n  ref\r\n) {\r\n  const timerRef = useRef<ReturnType<typeof requestAnimationFrame>>()\r\n  const lastSnapRef = useRef(null)\r\n  // @TODO refactor to an initialState: OPEN | CLOSED property as it's much easier to understand\r\n  // And informs what we should animate from. If the sheet is mounted with open = true, then initialState = OPEN.\r\n  // When initialState = CLOSED, then internal sheet must first render with open={false} before setting open={props.open}\r\n  // It's only when initialState and props.open is mismatching that a intial transition should happen\r\n  // If they match then transitions will only happen when a user interaction or resize event happen.\r\n  const initialStateRef = useRef<'OPEN' | 'CLOSED'>(\r\n    skipInitialTransition && props.open ? 'OPEN' : 'CLOSED'\r\n  )\r\n\r\n  // Using layout effect to support cases where the bottom sheet have to appear already open, no transition\r\n  useLayoutEffect(() => {\r\n    if (props.open) {\r\n      cancelAnimationFrame(timerRef.current)\r\n\r\n      // Cleanup defaultOpen state on close\r\n      return () => {\r\n        initialStateRef.current = 'CLOSED'\r\n      }\r\n    }\r\n  }, [props.open])\r\n\r\n  const handleSpringStart = useCallback(\r\n    async function handleSpringStart(event: SpringEvent) {\r\n      // Forward the event\r\n      await onSpringStart?.(event)\r\n\r\n      if (event.type === 'OPEN') {\r\n        // Ensures that when it's opening we abort any pending unmount action\r\n        cancelAnimationFrame(timerRef.current)\r\n      }\r\n    },\r\n    [onSpringStart]\r\n  )\r\n\r\n  const handleSpringEnd = useCallback(\r\n    async function handleSpringEnd(event: SpringEvent) {\r\n      // Forward the event\r\n      await onSpringEnd?.(event)\r\n    },\r\n    [onSpringEnd]\r\n  )\r\n\r\n  return (\r\n    <Portal.Root data-rsbs-portal>\r\n      <_BottomSheet\r\n        {...props}\r\n        lastSnapRef={lastSnapRef}\r\n        ref={ref}\r\n        initialState={initialStateRef.current}\r\n        onSpringStart={handleSpringStart}\r\n        onSpringEnd={handleSpringEnd}\r\n      />\r\n    </Portal.Root>\r\n  )\r\n})\r\n"],"names":["useLayoutEffect","window","useLayoutEffectSafely","useEffect","clamp","number","lower","upper","roundAndCheckForNaN","unrounded","rounded","Math","round","Number","isNaN","TypeError","observerOptions","box","useElementSizeObserver","ref","_ref3","label","enabled","resizeSourceRef","_useState","useState","size","setSize","useDebugValue","console","log","handleResize","useCallback","entries","borderBoxSize","blockSize","current","resizeObserver","ResizeObserver","observe","disconnect","sleep","ms","Promise","resolve","setTimeout","openToDrag","DRAG","target","actions","openToResize","RESIZE","overlayMachine","Machine","id","initial","context","initialState","states","closed","on","OPEN","CLOSE","undefined","opening","start","invoke","src","onDone","transition","always","cond","immediately","open","activating","_extends","smoothly","visuallyHidden","end","done","type","SNAP","dragging","snapping","entry","assign","y","_","payload","velocity","_ref4","snapSource","_ref5","_ref5$payload$source","source","snappingSmoothly","resizing","resizingSmoothly","closing","deactivating","closingSmoothly","onOpenCancel","event","onSnapCancel","onResizeCancel","onCloseCancel","onOpenEnd","onSnapEnd","onResizeEnd","services","onSnapStart","then","e","reject","onOpenStart","onCloseStart","onResizeStart","onCloseEnd","renderVisuallyHidden","group","groupEnd","activate","deactivate","openSmoothly","openImmediately","snapSmoothly","resizeSmoothly","closeSmoothly","guards","initiallyClosed","_ref2","initiallyOpen","_ref","_config$default","config","default","tension","friction","BottomSheet","React","forwardRef","children","sibling","className","footer","header","_open","lastSnapRef","initialFocusRef","onDismiss","controlledMaxHeight","maxHeight","_ref$defaultSnap","defaultSnap","getDefaultSnap","_defaultSnap","_ref$snapPoints","snapPoints","getSnapPoints","_snapPoints","_ref$blocking","blocking","_ref$scrollLocking","scrollLocking","style","onSpringStart","onSpringCancel","onSpringEnd","_ref$reserveScrollBar","reserveScrollBarGap","_ref$expandOnContentD","expandOnContentDrag","_ref$disableExpandLis","disableExpandList","_ref$preventPullUp","preventPullUp","props","_objectWithoutPropertiesLoose","_excluded","_useReady","ready","setReady","_useState2","readyMap","updateReadyMap","registerReady","key","_extends2","_extends3","Object","values","length","every","Boolean","useReady","canDragRef","useRef","onSpringStartRef","onSpringCancelRef","onSpringEndRef","mql","_useSpring","useReactSpring","minSnap","maxSnap","spring","set","containerRef","scrollRef","contentRef","headerRef","footerRef","overlayRef","heightRef","preventScrollingRef","prefersReducedMotion","useMemo","matchMedia","matches","handler","addListener","removeListener","scrollLockRef","targetRef","active","disableBodyScroll","allowTouchMove","el","closest","enableBodyScroll","useScrollLock","ariaHiderRef","originalValues","rootNodes","parentNode","document","querySelectorAll","forEach","node","attr","getAttribute","push","setAttribute","index","originalValue","removeAttribute","useAriaHider","focusTrapRef","fallbackRef","fallback","trap","createFocusTrap","onActivate","initialFocus","fallbackFocus","escapeDeactivates","clickOutsideDeactivates","useFocusTrap","_useSnapPoints","_useDimensions","footerEnabled","headerEnabled","innerHeight","setMaxHeight","raf","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","useMaxHeight","headerHeight","contentHeight","footerHeight","minHeight","min","useDimensions","_processSnapPoints","unsafeSnaps","snapPointsDedupedSet","concat","map","reduce","acc","snapPoint","add","Set","Array","from","apply","max","processSnapPoints","height","findSnap","numberOrCallback","querySnap","lastSnap","prev","curr","abs","useSnapPoints","maxHeightRef","minSnapRef","maxSnapRef","findSnapRef","defaultSnapRef","asyncSet","onRest","_ref2$config","_ref2$config$velocity","_excluded2","opts","_excluded3","mass","args","slice","call","arguments","_useMachine","useMachine","devTools","immediate","all","snap","send","useImperativeHandle","snapTo","_temp","_ref3$velocity","_ref3$source","elem","preventScrolling","disableExpandListNodes","selector","querySelector","filter","some","disableNode","contains","scrollTop","preventDefault","prevValue","preventSafariOverscrollOnStart","preventSafariOverscrollOnMove","passive","bind","useDrag","_ref4$args$","_ref4$args","_ref4$args$$closeOnTa","closeOnTap","_ref4$args$$isContent","isContentDragging","cancel","direction","down","first","last","_ref4$memo","memo","get","_my","movement","tap","my","hasScroll","scrollHeight","clientHeight","rawY","predictedDistance","predictedY","newY","rubberbandIfOutOfBounds","filterTaps","interpolations","interpolateBorderRadius","to","interpolateHeight","interpolateY","interpolateFiller","ceil","interpolateContentOpacity","minX","interpolateBackdrop","useSpringInterpolations","createElement","animated","div","publicStates","find","opacity","role","tabIndex","onKeyDown","stopPropagation","_ref6","skipInitialTransition","timerRef","initialStateRef","handleSpringStart","handleSpringEnd","Portal","Root","_BottomSheet"],"mappings":"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"}